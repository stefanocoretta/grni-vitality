---
title: "Vitality"
author: "Stefano Coretta"
format:
  html:
    toc: true
---

## Read data

```{r}
#| label: setup
#| include: false

library(HH)
library(tidyverse)
library(ggh4x)
```

```{r}
#| label: polentometro
polentometro_en_include <- readRDS("data/derived/polentometro_en_include.rds")

polentometro_en_include <- polentometro_en_include |> 
  mutate(
    understand_galloit_birth = ifelse(is.na(understand_galloit_birth), as.character(understand), as.character(understand_galloit_birth)),
    understand_galloit_birth = factor(understand_galloit_birth, levels = c("No, per niente", "Sì, ma molto poco", "Così così", "Sì, lo capisco bene", "Sì, lo capisco molto bene")),
    speak_galloit_birth = ifelse(is.na(speak_galloit_birth), as.character(speak), as.character(speak_galloit_birth)),
    speak_galloit_birth = factor(speak_galloit_birth, levels = c("No, per niente", "Sì, ma molto poco", "Così così", "Sì, lo parlo bene", "Sì, lo parlo molto bene"))
  )
```

## Factor 1: Intergenerational language transmission

### Language acquisition

```{r}
#| label: languages
polentometro_en_include |> 
  pivot_longer(c(languages_parents, first_langacq, spoke_to_children, would_speak_to_children, children_speak)) |> 
  drop_na(value) |> 
  filter(
    !(value %in% c("No_minors", "No_adult_children", "Neither")),
  ) |> 
  mutate(
    name = factor(name, levels = c("languages_parents", "first_langacq", "spoke_to_children", "children_speak", "would_speak_to_children")),
    value = factor(value, levels = c("Mostly_GR", "Equally", "Mostly_IT"))
  ) |> 
  ggplot(aes(name, fill = value)) +
  geom_bar(position = "fill") +
  theme_dark() +
  scale_x_discrete(labels = c("Parents'\nlanguage", "Acquired\nlanguage", "Spoke to\nchildren", "Children's\nlanguage", "(Would speak to\nchildren)")) +
  scale_fill_brewer(type = "div", palette = "RdBu", labels = c("Mostly GR", "IT and GR\nequally", "Mostly IT")) +
  labs(
    x = element_blank(), y = "Proportion", fill = "Languages spoken"
  ) +
  theme(legend.position = "bottom")

ggsave("img/lang-acq.png", width = 7, height = 5)
```

```{r}
#| label: languages-generations
#| fig-asp: 0.3
polentometro_en_include |> 
  pivot_longer(c(languages_parents, first_langacq, spoke_to_children, would_speak_to_children, children_speak)) |> 
  drop_na(value, generation) |> 
  filter(
    !(value %in% c("No_minors", "No_adult_children", "Neither")),
  ) |> 
  mutate(
    name = factor(name, levels = c("languages_parents", "first_langacq", "spoke_to_children", "children_speak", "would_speak_to_children")),
    value = factor(value, levels = c("Mostly_GR", "Equally", "Mostly_IT"))
  ) |> 
  ggplot(aes(name, fill = value)) +
  geom_bar(position = "fill") +
  facet_grid(cols = vars(generation)) +
  theme_dark() +
  scale_x_discrete(labels = c("PL", "FL", "to-C", "by-C", "W")) +
  scale_fill_brewer(type = "div", palette = "RdBu", labels = c("Mostly GR", "IT and GR\nequally", "Mostly IT")) +
  labs(
    x = element_blank(), y = "Proportion", fill = "Languages spoken"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "bottom")

ggsave("img/lang-acq-gens.png", width = 7, height = 2.5)
```

### Understand GR

```{r}
#| label: understand
polentometro_en_include |> 
  ggplot(aes(generation, fill = understand_galloit_birth)) +
  geom_bar(position = "fill") +
  scale_fill_brewer(
    type = "div",
    labels = c("Not at all", "Only a little", "So and so", "Well", "Very well")
  ) +
  labs(
    x = "Cohort generation", y = "Proportion", fill = "Understand GR"
  )
ggsave("img/understand-gens.png", width = 7, height = 5)
```

```{r}
#| label: understand-region
understand_prop <- polentometro_en_include |> 
  count(Region, understand_galloit_birth) |> 
  group_by(Region) |> 
  mutate(
    prop = n / sum(n),
    prop_max = ifelse(understand_galloit_birth == "Sì, lo capisco molto bene", prop, 0),
    prop_max = sum(prop_max)
  )

understand_prop |> 
  ggplot(aes(reorder(Region, prop_max), prop, fill = understand_galloit_birth)) +
  geom_bar(stat = "identity") +
  coord_flip() +
  scale_fill_brewer(type = "div")
```

```{r}
#| label: understand-area
polentometro_en_include |> 
  ggplot(aes(Area, fill = understand_galloit_birth)) +
  geom_bar(position = "fill") +
  coord_flip() +
  scale_fill_brewer(type = "div")
```

```{r}
#| label: understand-generation-lik
understand_generation_lik <- polentometro_en_include |> 
  select(generation, understand_galloit_birth) |> 
  count(generation, understand_galloit_birth) |> 
  pivot_wider(names_from = understand_galloit_birth, values_from = n) |> 
  mutate(
    across(-generation, ~ifelse(is.na(.x), 0, .x)),
    `Sì, lo capisco bene` = 0
  ) |> 
  relocate(`Sì, lo capisco molto bene`, .after = everything()) |> 
  relocate(`No, per niente`, .after = generation)

likert(
  generation ~ . ,
  understand_generation_lik,
  as.percent = TRUE,
  main = ""
)
```

### Speak GR

```{r}
#| label: speak

polentometro_en_include |> 
  ggplot(aes(generation, fill = speak_galloit_birth)) +
  geom_bar(position = "fill") +
  scale_fill_brewer(
    type = "div",
    labels = c("Not at all", "Only a little", "So and so", "Well", "Very well")
  ) +
  labs(
    x = "Cohort generation", y = "Proportion", fill = "Speak GR"
  )
ggsave("img/speak-gens.png", width = 7, height = 5)
```

```{r}
#| label: speak-region
speak_prop <- polentometro_en_include |> 
  count(Region, speak_galloit_birth) |> 
  group_by(Region) |> 
  mutate(
    prop = n / sum(n),
    prop_max = ifelse(speak_galloit_birth == "Sì, lo parlo molto bene", prop, 0),
    prop_max = sum(prop_max)
  )

speak_prop |> 
  ggplot(aes(reorder(Region, prop_max), prop, fill = speak_galloit_birth)) +
  geom_bar(stat = "identity") +
  coord_flip() +
  scale_fill_brewer(type = "div")
```

```{r}
#| label: speak-area
polentometro_en_include |> 
  ggplot(aes(Area, fill = speak_galloit_birth)) +
  geom_bar(position = "fill") +
  coord_flip() +
  scale_fill_brewer(type = "div")
```

```{r}
#| label: speak-generation-lik
speak_generation_lik <- polentometro_en_include |> 
  select(generation, speak_galloit_birth) |> 
  count(generation, speak_galloit_birth) |> 
  pivot_wider(names_from = speak_galloit_birth, values_from = n) |> 
  mutate(across(-generation, ~ifelse(is.na(.x), 0, .x))) |> 
  relocate(`Sì, lo parlo molto bene`, .after = everything())

likert(
  generation ~ . ,
  speak_generation_lik,
  as.percent = TRUE,
  main = ""
)
```

## Factor 2 and 3: Absolute number and proportion of speakers

```{r}
#| label: population

pop_regions <- read_csv("data/raw/population-by-region.csv")
pop_tot <- sum(pop_regions$pop)
```

The following is an estimate of the proportion of speakers based only on responses of whether they know how to speak GR ("very well", "well").

```{r}
#| label: prop-speak-1
prop_speak_1 <- polentometro_en_include |> 
  mutate(
    speak_yn = ifelse(speak_galloit_birth %in% c("Sì, lo parlo molto bene", "Sì, lo parlo bene"), "yes", "no")
  ) |> 
  add_count(name = "tot") |> 
  count(speak_yn, tot) |> 
  mutate(
    prop = round(n / tot, 2)
  )
prop_speak_1
```

The following is an estimate of the proportion of speakers based on responses of whether they know how to speak GR ("very well", "well") and the frequency ("some times", "often", "always"). In absolute population, there are about `{r} round((pop_tot * prop_speak_1$prop[2]) / 1000000, 1)` million speakers and `{r} round((pop_tot * prop_speak_1$prop[1]) / 1000000, 1)` million non-speakers.

```{r}
#| label: prop-speak-2
prop_speak_2 <- polentometro_en_include |> 
  mutate(
    speak_yn = ifelse(
      speak_galloit_birth %in% c("Sì, lo parlo molto bene", "Sì, lo parlo bene") &
        !(speak_frequency %in% c("Non lo parlo mai", "Lo parlo raramente")),
      "yes",
      "no"
    )
  ) |> 
  add_count(name = "tot") |> 
  count(speak_yn, tot) |> 
  mutate(
    prop = round(n / tot, 2)
  )
prop_speak_2
```

The following is an estimate of the proportion of speakers based on responses of whether they know how to speak GR ("so so", "very well", "well") and the frequency ("some times", "often", "always"). In absolute population, there are about `{r} round((pop_tot * prop_speak_2$prop[2]) / 1000000, 1)` million speakers and `{r} round((pop_tot * prop_speak_2$prop[1]) / 1000000, 1)` million non-speakers.

```{r}
#| label: prop-speak-3
prop_speak_3 <- polentometro_en_include |> 
  mutate(
    speak_yn = ifelse(
      speak_galloit_birth %in% c("Sì, lo parlo molto bene", "Sì, lo parlo bene", "Così così") &
        !(speak_frequency %in% c("Non lo parlo mai", "Lo parlo raramente")),
      "yes",
      "no"
    )
  ) |> 
  add_count(name = "tot") |> 
  count(speak_yn, tot) |> 
  mutate(
    prop = round(n / tot, 2)
  )
prop_speak_3
```

The following is an estimate of the proportion of speakers based on responses of whether they know how to speak GR ("very well", "well") and the frequency ("some times", "often", "always") and generation. Proportions are given for speakers (as defined) and non-speakers separately. In absolute population, there are about `{r} round((pop_tot * prop_speak_3$prop[2]) / 1000000, 1)` million speakers and `{r} round((pop_tot * prop_speak_3$prop[1]) / 1000000, 1)` million non-speakers.

```{r}
#| label: prop-speak-gen
polentometro_en_include |> 
  mutate(
    speak_yn = ifelse(
      speak_galloit_birth %in% c("Sì, lo parlo molto bene", "Sì, lo parlo bene") &
        !(speak_frequency %in% c("Non lo parlo mai", "Lo parlo raramente")),
      "yes",
      "no"
    )
  ) |> 
  group_by(speak_yn) |> 
  add_count(name = "tot") |> 
  count(speak_yn, generation, tot) |> 
  mutate(
    prop = round(n / tot, 2)
  ) |> 
  select(-tot, -n) |> 
  pivot_wider(names_from = speak_yn, values_from = prop)
```

```{r}
#| label: count-speak-plot
polentometro_en_include |> 
  ggplot(aes(speak_galloit_birth, fill = speak_galloit_birth)) +
  geom_bar() +
  coord_flip() +
  scale_fill_brewer(type = "div")
```

```{r}
#| label: prop-speak
polentometro_en_include |> 
  add_count(name = "tot") |> 
  count(speak_galloit_birth, tot) |> 
  mutate(
    perc = round(n / tot, 2)
  )
```

```{r}
#| label: speak-freq
polentometro_en_include |> 
  drop_na(speak_frequency) |> 
  ggplot(aes(speak_frequency, fill = speak_frequency)) +
  geom_bar() +
  coord_flip() +
  scale_fill_brewer(type = "div")
```

```{r}
#| label: speak-freq-speak
polentometro_en_include |> 
  drop_na(speak_frequency) |> 
  ggplot(aes(speak_frequency, fill = speak_galloit_birth)) +
  geom_bar() +
  coord_flip() +
  scale_fill_brewer(type = "div")
```

```{r}
#| label: speak-freq-speak-yes

polentometro_en_include |> 
  drop_na(speak_frequency) |> 
  filter(speak_galloit_birth %in% c("Sì, lo parlo molto bene", "Sì, lo parlo bene")) |> 
  add_count(name = "tot") |> 
  count(speak_frequency, tot) |> 
  mutate(
    Proportion =  round(n / tot, 2)
  ) |> 
  ggplot(aes(speak_frequency, Proportion, fill = speak_frequency)) +
  geom_bar(stat = "identity") +
  scale_fill_brewer(type = "div") +
  scale_x_discrete(labels = c("Never", "Rarely", "Some times", "Often", "Always")) +
  labs(
    x = "Speaking frequency"
  ) +
  theme_dark() +
  theme(legend.position = "none")

ggsave("img/speak-freq.png", width = 6, height = 5)
```

```{r}
#| label: speak-freq-speak-yes-gen
polentometro_en_include |> 
  drop_na(speak_frequency) |> 
  filter(speak_galloit_birth %in% c("Sì, lo parlo molto bene", "Sì, lo parlo bene")) |> 
  add_count(generation, name = "tot") |> 
  count(generation, speak_frequency, tot) |> 
  mutate(
    Proportion =  round(n / tot, 2)
  ) |> 
  ggplot(aes(speak_frequency, Proportion, fill = speak_frequency)) +
  geom_bar(stat = "identity") +
  scale_fill_brewer(type = "div") +
  scale_x_discrete(labels = c("N", "R", "ST", "O", "A")) +
  facet_grid(cols = vars(generation)) +
  labs(
    x = "Speaking frequency"
  ) +
  theme_dark() +
  theme(legend.position = "none")

ggsave("img/speak-freq-gens.png", width = 7, height = 2)
```

## Factor 4: Shifts in domains of language use

```{r}
#| label: domains-use

domains_use <- polentometro_en_include |> 
  select(
    CASE, generation, Area, Region,
    starts_with("with_"), starts_with("at_"), starts_with("about_")
  ) |> 
  drop_na(with_tot) |> 
  pivot_longer(with_tot:about_arguments, names_to = "domain")

domains_use_domains <- domains_use |> 
  filter(!str_detect(domain, "tot")) |> 
  mutate(value = as.logical(value))

domains_use_tot <- domains_use |> 
  filter(str_detect(domain, "tot"))
```

```{r}
#| label: domains-use-speak-2

domains_use_speak_2 <- polentometro_en_include |> 
  mutate(
    speak_yn = ifelse(
      speak_galloit_birth %in% c("Sì, lo parlo molto bene", "Sì, lo parlo bene") &
        !(speak_frequency %in% c("Non lo parlo mai", "Lo parlo raramente")),
      "yes",
      "no"
    )
  ) |> 
  filter(speak_yn == "yes") |> 
  select(
    CASE, generation, Area, Region,
    starts_with("with_"), starts_with("at_"), starts_with("about_")
  ) |> 
  drop_na(with_tot) |> 
  pivot_longer(with_tot:about_arguments, names_to = "domain")

domains_use_domains_speak_2 <- domains_use_speak_2 |> 
  filter(!str_detect(domain, "tot")) |> 
  mutate(value = as.logical(value))

domains_use_tot_speak_2 <- domains_use_speak_2 |> 
  filter(str_detect(domain, "tot"))
```

### With whom

```{r}
#| label: domains-with
domains_use_domains |> 
  filter(str_detect(domain, "^with")) |> 
  ggplot(aes(domain, fill = value)) +
  geom_bar(position = "fill") +
  coord_flip()

domains_use_domains |> 
  filter(str_detect(domain, "^with")) |> 
  ggplot(aes(domain, fill = value)) +
  geom_bar(position = "fill") +
  coord_flip() +
  facet_wrap(~generation)

domains_use_domains |> 
  filter(str_detect(domain, "^with")) |> 
  ggplot(aes(domain, fill = value)) +
  geom_bar(position = "fill") +
  coord_flip() +
  facet_wrap(~Region)
```

```{r}
#| label: domains-with-gen

domains_use_domains |> 
  filter(str_detect(domain, "^with")) |> 
  mutate(
    domain = case_when(
      domain == "with_acquantainces" ~ "Acquantainces",
      domain == "with_animals" ~ "Animals",
      domain == "with_children" ~ "Children",
      domain == "with_colleagues" ~ "Colleagues",
      domain == "with_doctor" ~ "Doctors",
      domain == "with_elderly" ~ "Elderly",
      domain == "with_family" ~ "Relatives",
      domain == "with_friends" ~ "Friends",
      domain == "with_neighbours" ~ "Neighbours",
      domain == "with_notknown" ~ "Strangers",
      domain == "with_priest" ~ "Ministers",
      domain == "with_schoolmates" ~ "Schoolmates",
      domain == "with_teachers" ~ "Teachers",
      domain == "with_unimates" ~ "Uni classmates",
      domain == "with_uniprofs" ~ "Uni professors"
    )
  ) |> 
  ggplot(aes(generation, fill = value)) +
  geom_bar(position = "fill") +
  facet_wrap(~domain, ncol = 8) +
  scale_x_discrete(labels = c("S", "B", "X", "M", "Z")) +
  scale_fill_brewer(type = "qual", direction = -1) +
  labs(
    x = "Cohort generation", y = "Proportion"
  )

ggsave("img/dom-with-gen.png", width = 10, height = 2.5)
```

```{r}
#| label: domains-with-gen-speak-2

domains_use_domains_speak_2 |> 
  filter(str_detect(domain, "^with")) |> 
  ggplot(aes(generation, fill = value)) +
  geom_bar(position = "fill") +
  facet_wrap(~domain)
```

### Where

```{r}
#| label: domains-at
domains_use_domains |> 
  filter(str_detect(domain, "^at")) |> 
  ggplot(aes(domain, fill = value)) +
  geom_bar(position = "fill") +
  coord_flip()

domains_use_domains |> 
  filter(str_detect(domain, "^at")) |> 
  ggplot(aes(domain, fill = value)) +
  geom_bar(position = "fill") +
  coord_flip() +
  facet_wrap(~generation)

domains_use_domains |> 
  filter(str_detect(domain, "^at")) |> 
  ggplot(aes(domain, fill = value)) +
  geom_bar(position = "fill") +
  coord_flip() +
  facet_wrap(~Region)
```

```{r}
#| label: domains-at-gen
domains_use_domains |> 
  filter(str_detect(domain, "^at")) |> 
  mutate(
    domain = case_when(
      domain == "at_church" ~ "Church",
      domain == "at_home" ~ "At home",
      domain == "at_market" ~ "Market",
      domain == "at_pub" ~ "Pub",
      domain == "at_school" ~ "School",
      domain == "at_shop" ~ "Shops",
      domain == "at_uni" ~ "University",
      domain == "at_work" ~ "Workplace"
    )
  ) |> 
  ggplot(aes(generation, fill = value)) +
  geom_bar(position = "fill") +
  facet_wrap(~domain, ncol = 8) +
  scale_x_discrete(labels = c("S", "B", "X", "M", "Z")) +
  scale_fill_brewer(type = "qual", direction = -1) +
  labs(
    x = "Cohort generation", y = "Proportion"
  )

ggsave("img/dom-at-gen.png", width = 10, height = 1.5)
```

```{r}
#| label: domains-at-gen-speak-2
domains_use_domains_speak_2 |> 
  filter(str_detect(domain, "^at")) |> 
  ggplot(aes(generation, fill = value)) +
  geom_bar(position = "fill") +
  facet_wrap(~domain)
```

### About what

```{r}
#| label: domains-about
domains_use_domains |> 
  filter(str_detect(domain, "^about")) |> 
  ggplot(aes(domain, fill = value)) +
  geom_bar(position = "fill") +
  coord_flip()

domains_use_domains |> 
  filter(str_detect(domain, "^about")) |> 
  ggplot(aes(domain, fill = value)) +
  geom_bar(position = "fill") +
  coord_flip() +
  facet_wrap(~generation)

domains_use_domains |> 
  filter(str_detect(domain, "^about")) |> 
  ggplot(aes(domain, fill = value)) +
  geom_bar(position = "fill") +
  coord_flip() +
  facet_wrap(~Region)
```

```{r}
#| label: domains-about-gen

domains_use_domains |> 
  filter(str_detect(domain, "^about")) |> 
  mutate(
    domain = case_when(
      domain == "about_anger" ~ "Anger",
      domain == "about_arguments" ~ "Arguments",
      domain == "about_counting" ~ "Counting",
      domain == "about_directions" ~ "Giving\ndirections",
      domain == "about_distantpast" ~ "Distant past",
      domain == "about_foreignnews" ~ "Foreign news",
      domain == "about_givinginstr" ~ "Giving\ninstructions",
      domain == "about_greetings" ~ "Greetings",
      domain == "about_happiness" ~ "Happiness",
      domain == "about_intimate" ~ "Intimacy",
      domain == "about_joking" ~ "Joking",
      domain == "about_news" ~ "News",
      domain == "about_politics" ~ "Politics",
      domain == "about_praying" ~ "Praying",
      domain == "about_science" ~ "Science",
      domain == "about_storytell" ~ "Story telling",
      domain == "about_swearing" ~ "Swearing",
      domain == "about_thinking" ~ "Thinking",
      domain == "about_wishes" ~ "Wishes"
    )
  ) |> 
  ggplot(aes(generation, fill = value)) +
  geom_bar(position = "fill") +
  facet_wrap(~domain, ncol = 10) +
  scale_x_discrete(labels = c("S", "B", "X", "M", "Z")) +
  scale_fill_brewer(type = "qual", direction = -1) +
  labs(
    x = "Cohort generation", y = "Proportion"
  )

ggsave("img/dom-about-gen.png", width = 10, height = 3)
```

```{r}
#| label: domains-about-gen-speak-2

domains_use_domains_speak_2 |> 
  filter(str_detect(domain, "^about")) |>
  mutate(
    domain = case_when(
      domain == "about_anger" ~ "Anger",
      domain == "about_arguments" ~ "Disagreements",
      domain == "about_counting" ~ "Counting",
      domain == "about_directions" ~ "Giving directions",
      domain == "about_distantpast" ~ "Distant past",
      domain == "about_foreignnews" ~ "Foreign news",
      domain == "about_givinginstr" ~ "Giving instructions",
      domain == "about_greetings" ~ "Greetings",
      domain == "about_happiness" ~ "Happiness",
      domain == "about_intimate" ~ "Intimacy",
      domain == "about_joking" ~ "Joking",
      domain == "about_news" ~ "News",
      domain == "about_politics" ~ "Politics",
      domain == "about_praying" ~ "Praying",
      domain == "about_science" ~ "Science",
      domain == "about_storytell" ~ "Story telling",
      domain == "about_swearing" ~ "Swearing",
      domain == "about_thinking" ~ "Thinking",
      domain == "about_wishes" ~ "Wishes"
    )
  ) |> 
  ggplot(aes(generation, fill = value)) +
  geom_bar(position = "fill") +
  facet_wrap(~domain) +
  scale_x_discrete(labels = c("S", "B", "X", "M", "Z")) +
  scale_fill_brewer(type = "qual", direction = -1) +
  labs(
    x = "Cohort generation", y = "Proportion"
  )
```

## Factor 5: Response to New Domains and Media

```{r}
#| label: new-doms

new_domains_use <- polentometro_en_include |> 
  select(
    CASE, generation, Area, Region,
    ends_with("_write"), personal_notes, materials_tv, listen
  ) |> 
  drop_na(no_write) |> 
  pivot_longer(c(ends_with("_write"), personal_notes, materials_tv, listen), names_to = "domain")

new_domains_use_domains <- new_domains_use |>
  mutate(value = as.logical(value))
```

```{r}
#| label: new-doms-plot

new_domains_use_domains |>
  mutate(
    domain = case_when(
      domain == "literature_write" ~ "Literature",
      domain == "messaging_write" ~ "Messaging",
      domain == "read_write" ~ "Read and write",
      domain == "no_write" ~ "Doesn't write",
      domain == "personal_notes" ~ "Note taking",
      domain == "print_email_write" ~ "Emails/letters",
      domain == "socialmedia_write" ~ "Social Media",
      domain == "materials_tv" ~ "TV/radio prog",
      domain == "listen" ~ "TV/radio"
    ),
    question = case_when(
      domain %in% c("Literature", "Messaging", "Doesn't write", "Note taking", "Emails/letters", "Social Media", "TV/radio") ~ "Do you write/listen to?",
      domain == "Read and write" ~ "Can you?",
      domain == "TV/radio prog" ~ "Know of?"
    )
  ) |> 
  ggplot(aes(generation, fill = value)) +
  geom_bar(position = "fill") +
  facet_nested_wrap(~question + domain, ncol = 10) +
  scale_x_discrete(labels = c("S", "B", "X", "M", "Z")) +
  scale_fill_brewer(type = "qual", direction = -1) +
  labs(
    x = "Cohort generation", y = "Proportion"
  )

ggsave("img/new-doms.png", width = 10, height = 2)
```

## Factor 6: Availability of Materials for Language Education and Literacy

```{r}
#| label: materials

materials <- polentometro_en_include |> 
  select(
    CASE, generation, Area, Region,
    starts_with("materials_")
  ) |> 
  drop_na(materials_tot) |> 
  pivot_longer(starts_with("materials_"), names_to = "materials")

materials <- materials |>
  filter(materials != "materials_tot") |> 
  mutate(value = as.logical(value))

materials_tot <- materials |> 
  filter(materials == "materials_tot")
```

```{r}
#| label: materials-plot

materials |>
  ggplot(aes(generation, fill = value)) +
  geom_bar(position = "fill") +
  facet_wrap(~materials, ncol = 10) +
  scale_x_discrete(labels = c("S", "B", "X", "M", "Z")) +
  scale_fill_brewer(type = "qual", direction = -1) +
  labs(
    x = "Cohort generation", y = "Proportion"
  )

ggsave("img/materials.png", width = 10, height = 2)
```

## Factor 8: Community Members’ Attitudes towards Their Own Language

```{r}
#| label: attitudes

attitudes <- polentometro_en_include |> 
  select(
    CASE, generation, Area, Region, reaction, loss, taught_at_school
  ) |> 
  drop_na(reaction) |> 
  pivot_longer(c(reaction, loss, taught_at_school), names_to = "attitude") |> 
  mutate(
    value = case_when(
      value %in% c("Yes", "Positive") ~ "Yes/Positive",
      value %in% c("No", "Negative") ~ "No/Negative",
      TRUE ~ value
    ),
    value = factor(value, levels = c("Yes/Positive", "Indifferent", "No/Negative"))
  )
```

```{r}
#| label: attitudes-plot

attitudes |> 
  ggplot(aes(attitude, fill = value)) +
  geom_bar(position = "fill") +
  scale_fill_brewer(type = "div") +
  scale_x_discrete(labels = c("Loss", "Reaction", "Taught at school")) +
  theme_dark() +
  labs(
    x = element_blank(), y = "Proportion"
  )

ggsave("img/attitudes.png", width = 7, height = 5)
```
