---
title: "Vitality"
author: "Stefano Coretta"
format:
  html:
    toc: true
---

## Read data

```{r}
#| label: setup
#| include: false

library(HH)
library(tidyverse)
```

```{r}
#| label: polentometro
polentometro_en <- readRDS("data/derived/polentometro_en.rds")

polentometro_page15 <- polentometro_en |> 
  filter(
    MAXPAGE >= 15,
    generation != "Alpha"
  ) |> 
  mutate(
    understand_galloit_birth = ifelse(is.na(understand_galloit_birth), as.character(understand), as.character(understand_galloit_birth)),
    understand_galloit_birth = factor(understand_galloit_birth, levels = c("No, per niente", "Sì, ma molto poco", "Così così", "Sì, lo capisco bene", "Sì, lo capisco molto bene")),
    speak_galloit_birth = ifelse(is.na(speak_galloit_birth), as.character(speak), as.character(speak_galloit_birth)),
    speak_galloit_birth = factor(speak_galloit_birth, levels = c("No, per niente", "Sì, ma molto poco", "Così così", "Sì, lo parlo bene", "Sì, lo parlo molto bene"))
  )
```

## Factor 1: Intergenerational language transmission

### Language acquisition

```{r}
#| label: languages
polentometro_page15 |> 
  pivot_longer(c(languages_parents, first_langacq, spoke_to_children, would_speak_to_children, children_speak)) |> 
  drop_na(value) |> 
  filter(
    !(value %in% c("No_minors", "No_adult_children", "Neither")),
  ) |> 
  mutate(
    name = factor(name, levels = c("languages_parents", "first_langacq", "spoke_to_children", "children_speak", "would_speak_to_children")),
    value = factor(value, levels = c("Mostly_GI", "Equally", "Mostly_IT"))
  ) |> 
  ggplot(aes(name, fill = value)) +
  geom_bar(position = "fill") +
  theme_dark() +
  scale_x_discrete(labels = c("Parents'\nlanguage", "Acquired\nlanguage", "Spoke to\nchildren", "Children's\nlanguage", "(Would speak to\nchildren)")) +
  scale_fill_brewer(type = "div", palette = "RdBu", labels = c("Mostly GI", "IT and GI\nequally", "Mostly IT")) +
  labs(
    x = element_blank(), y = "Proportion", fill = "Languages spoken"
  ) +
  theme(legend.position = "bottom")

ggsave("img/lang-acq.png", width = 7, height = 5)
```

```{r}
#| label: languages-generations
#| fig-asp: 0.3
polentometro_page15 |> 
  pivot_longer(c(languages_parents, first_langacq, spoke_to_children, would_speak_to_children, children_speak)) |> 
  drop_na(value, generation) |> 
  filter(
    !(value %in% c("No_minors", "No_adult_children", "Neither")),
  ) |> 
  mutate(
    name = factor(name, levels = c("languages_parents", "first_langacq", "spoke_to_children", "children_speak", "would_speak_to_children")),
    value = factor(value, levels = c("Mostly_GI", "Equally", "Mostly_IT"))
  ) |> 
  ggplot(aes(name, fill = value)) +
  geom_bar(position = "fill") +
  facet_grid(cols = vars(generation)) +
  theme_dark() +
  scale_x_discrete(labels = c("PL", "FL", "to-C", "by-C", "W")) +
  scale_fill_brewer(type = "div", palette = "RdBu", labels = c("Mostly GI", "IT and GI\nequally", "Mostly IT")) +
  labs(
    x = element_blank(), y = "Proportion", fill = "Languages spoken"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "bottom")

ggsave("img/lang-acq-gens.png", width = 7, height = 2.5)
```

### Understand GI

```{r}
#| label: understand
polentometro_page15 |> 
  ggplot(aes(generation, fill = understand_galloit_birth)) +
  geom_bar(position = "fill") +
  scale_fill_brewer(
    type = "div",
    labels = c("Not at all", "Only a little", "So and so", "Well", "Very well")
  ) +
  labs(
    x = "Cohort generation", y = "Proportion", fill = "Understand GI"
  )
ggsave("img/understand-gens.png", width = 7, height = 5)
```

```{r}
#| label: understand-region
understand_prop <- polentometro_page15 |> 
  count(Region, understand_galloit_birth) |> 
  group_by(Region) |> 
  mutate(
    prop = n / sum(n),
    prop_max = ifelse(understand_galloit_birth == "Sì, lo capisco molto bene", prop, 0),
    prop_max = sum(prop_max)
  )

understand_prop |> 
  ggplot(aes(reorder(Region, prop_max), prop, fill = understand_galloit_birth)) +
  geom_bar(stat = "identity") +
  coord_flip() +
  scale_fill_brewer(type = "div")
```

```{r}
#| label: understand-area
polentometro_page15 |> 
  ggplot(aes(Area, fill = understand_galloit_birth)) +
  geom_bar(position = "fill") +
  coord_flip() +
  scale_fill_brewer(type = "div")
```

```{r}
#| label: understand-generation-lik
understand_generation_lik <- polentometro_page15 |> 
  select(generation, understand_galloit_birth) |> 
  count(generation, understand_galloit_birth) |> 
  pivot_wider(names_from = understand_galloit_birth, values_from = n) |> 
  mutate(
    across(-generation, ~ifelse(is.na(.x), 0, .x)),
    `Sì, lo capisco bene` = 0
  ) |> 
  relocate(`Sì, lo capisco molto bene`, .after = everything()) |> 
  relocate(`No, per niente`, .after = generation)

likert(
  generation ~ . ,
  understand_generation_lik,
  as.percent = TRUE,
  main = ""
)
```

### Speak GI

```{r}
#| label: speak

polentometro_page15 |> 
  ggplot(aes(generation, fill = speak_galloit_birth)) +
  geom_bar(position = "fill") +
  scale_fill_brewer(
    type = "div",
    labels = c("Not at all", "Only a little", "So and so", "Well", "Very well")
  ) +
  labs(
    x = "Cohort generation", y = "Proportion", fill = "Speak GI"
  )
ggsave("img/speak-gens.png", width = 7, height = 5)
```

```{r}
#| label: speak-region
speak_prop <- polentometro_page15 |> 
  count(Region, speak_galloit_birth) |> 
  group_by(Region) |> 
  mutate(
    prop = n / sum(n),
    prop_max = ifelse(speak_galloit_birth == "Sì, lo parlo molto bene", prop, 0),
    prop_max = sum(prop_max)
  )

speak_prop |> 
  ggplot(aes(reorder(Region, prop_max), prop, fill = speak_galloit_birth)) +
  geom_bar(stat = "identity") +
  coord_flip() +
  scale_fill_brewer(type = "div")
```

```{r}
#| label: speak-area
polentometro_page15 |> 
  ggplot(aes(Area, fill = speak_galloit_birth)) +
  geom_bar(position = "fill") +
  coord_flip() +
  scale_fill_brewer(type = "div")
```

```{r}
#| label: speak-generation-lik
speak_generation_lik <- polentometro_page15 |> 
  select(generation, speak_galloit_birth) |> 
  count(generation, speak_galloit_birth) |> 
  pivot_wider(names_from = speak_galloit_birth, values_from = n) |> 
  mutate(across(-generation, ~ifelse(is.na(.x), 0, .x))) |> 
  relocate(`Sì, lo parlo molto bene`, .after = everything())

likert(
  generation ~ . ,
  speak_generation_lik,
  as.percent = TRUE,
  main = ""
)
```

## Factor 2 and 3: Absolute number and proportion of speakers

```{r}
#| label: population

pop_regions <- read_csv("data/raw/population-by-region.csv")
pop_tot <- sum(pop_regions$pop)
```

The following is an estimate of the proportion of speakers based only on responses of whether they know how to speak GI ("very well", "well").

```{r}
#| label: prop-speak-1
prop_speak_1 <- polentometro_page15 |> 
  mutate(
    speak_yn = ifelse(speak_galloit_birth %in% c("Sì, lo parlo molto bene", "Sì, lo parlo bene"), "yes", "no")
  ) |> 
  add_count(name = "tot") |> 
  count(speak_yn, tot) |> 
  mutate(
    prop = round(n / tot, 2)
  )
prop_speak_1
```

The following is an estimate of the proportion of speakers based on responses of whether they know how to speak GI ("very well", "well") and the frequency ("some times", "often", "always"). In absolute population, there are about `{r} round((pop_tot * prop_speak_1$prop[2]) / 1000000, 1)` million speakers and `{r} round((pop_tot * prop_speak_1$prop[1]) / 1000000, 1)` million non-speakers.

```{r}
#| label: prop-speak-2
prop_speak_2 <- polentometro_page15 |> 
  mutate(
    speak_yn = ifelse(
      speak_galloit_birth %in% c("Sì, lo parlo molto bene", "Sì, lo parlo bene") &
        !(speak_frequency %in% c("Non lo parlo mai", "Lo parlo raramente")),
      "yes",
      "no"
    )
  ) |> 
  add_count(name = "tot") |> 
  count(speak_yn, tot) |> 
  mutate(
    prop = round(n / tot, 2)
  )
prop_speak_2
```

The following is an estimate of the proportion of speakers based on responses of whether they know how to speak GI ("so so", "very well", "well") and the frequency ("some times", "often", "always"). In absolute population, there are about `{r} round((pop_tot * prop_speak_2$prop[2]) / 1000000, 1)` million speakers and `{r} round((pop_tot * prop_speak_2$prop[1]) / 1000000, 1)` million non-speakers.

```{r}
#| label: prop-speak-3
prop_speak_3 <- polentometro_page15 |> 
  mutate(
    speak_yn = ifelse(
      speak_galloit_birth %in% c("Sì, lo parlo molto bene", "Sì, lo parlo bene", "Così così") &
        !(speak_frequency %in% c("Non lo parlo mai", "Lo parlo raramente")),
      "yes",
      "no"
    )
  ) |> 
  add_count(name = "tot") |> 
  count(speak_yn, tot) |> 
  mutate(
    prop = round(n / tot, 2)
  )
prop_speak_3
```

The following is an estimate of the proportion of speakers based on responses of whether they know how to speak GI ("very well", "well") and the frequency ("some times", "often", "always") and generation. Proportions are given for speakers (as defined) and non-speakers separately. In absolute population, there are about `{r} round((pop_tot * prop_speak_3$prop[2]) / 1000000, 1)` million speakers and `{r} round((pop_tot * prop_speak_3$prop[1]) / 1000000, 1)` million non-speakers.

```{r}
#| label: prop-speak-gen
polentometro_page15 |> 
  mutate(
    speak_yn = ifelse(
      speak_galloit_birth %in% c("Sì, lo parlo molto bene", "Sì, lo parlo bene") &
        !(speak_frequency %in% c("Non lo parlo mai", "Lo parlo raramente")),
      "yes",
      "no"
    )
  ) |> 
  group_by(speak_yn) |> 
  add_count(name = "tot") |> 
  count(speak_yn, generation, tot) |> 
  mutate(
    prop = round(n / tot, 2)
  ) |> 
  select(-tot, -n) |> 
  pivot_wider(names_from = speak_yn, values_from = prop)
```

```{r}
#| label: count-speak-plot
polentometro_page15 |> 
  ggplot(aes(speak_galloit_birth, fill = speak_galloit_birth)) +
  geom_bar() +
  coord_flip() +
  scale_fill_brewer(type = "div")
```

```{r}
#| label: prop-speak
polentometro_page15 |> 
  add_count(name = "tot") |> 
  count(speak_galloit_birth, tot) |> 
  mutate(
    perc = round(n / tot, 2)
  )
```

```{r}
#| label: speak-freq
polentometro_page15 |> 
  drop_na(speak_frequency) |> 
  ggplot(aes(speak_frequency, fill = speak_frequency)) +
  geom_bar() +
  coord_flip() +
  scale_fill_brewer(type = "div")
```

```{r}
#| label: speak-freq-speak
polentometro_page15 |> 
  drop_na(speak_frequency) |> 
  ggplot(aes(speak_frequency, fill = speak_galloit_birth)) +
  geom_bar() +
  coord_flip() +
  scale_fill_brewer(type = "div")
```

```{r}
#| label: speak-freq-speak-yes

polentometro_page15 |> 
  drop_na(speak_frequency) |> 
  filter(speak_galloit_birth %in% c("Sì, lo parlo molto bene", "Sì, lo parlo bene")) |> 
  add_count(name = "tot") |> 
  count(speak_frequency, tot) |> 
  mutate(
    Proportion =  round(n / tot, 2)
  ) |> 
  ggplot(aes(speak_frequency, Proportion, fill = speak_frequency)) +
  geom_bar(stat = "identity") +
  scale_fill_brewer(type = "div") +
  scale_x_discrete(labels = c("Never", "Rarely", "Some times", "Often", "Always")) +
  labs(
    x = "Speaking frequency"
  ) +
  theme_dark() +
  theme(legend.position = "none")

ggsave("img/speak-freq.png", width = 6, height = 5)
```

```{r}
#| label: speak-freq-speak-yes-gen
polentometro_page15 |> 
  drop_na(speak_frequency) |> 
  filter(speak_galloit_birth %in% c("Sì, lo parlo molto bene", "Sì, lo parlo bene")) |> 
  add_count(generation, name = "tot") |> 
  count(generation, speak_frequency, tot) |> 
  mutate(
    Proportion =  round(n / tot, 2)
  ) |> 
  ggplot(aes(speak_frequency, Proportion, fill = speak_frequency)) +
  geom_bar(stat = "identity") +
  scale_fill_brewer(type = "div") +
  scale_x_discrete(labels = c("N", "R", "ST", "O", "A")) +
  facet_grid(cols = vars(generation)) +
  labs(
    x = "Speaking frequency"
  ) +
  theme_dark() +
  theme(legend.position = "none")

ggsave("img/speak-freq-gens.png", width = 7, height = 2)
```

## Factor 4: Shifts in domains of language use

```{r}
#| label: domains-use

domains_use <- polentometro_page15 |> 
  select(
    CASE, generation, Area, Region,
    starts_with("with_"), starts_with("at_"), starts_with("about_")
  ) |> 
  drop_na(with_tot) |> 
  pivot_longer(with_tot:about_arguments, names_to = "domain")

domains_use_domains <- domains_use |> 
  filter(!str_detect(domain, "tot")) |> 
  mutate(value = as.logical(value))

domains_use_tot <- domains_use |> 
  filter(str_detect(domain, "tot"))
```

```{r}
#| label: domains-use-speak-2

domains_use_speak_2 <- polentometro_page15 |> 
  mutate(
    speak_yn = ifelse(
      speak_galloit_birth %in% c("Sì, lo parlo molto bene", "Sì, lo parlo bene") &
        !(speak_frequency %in% c("Non lo parlo mai", "Lo parlo raramente")),
      "yes",
      "no"
    )
  ) |> 
  filter(speak_yn == "yes") |> 
  select(
    CASE, generation, Area, Region,
    starts_with("with_"), starts_with("at_"), starts_with("about_")
  ) |> 
  drop_na(with_tot) |> 
  pivot_longer(with_tot:about_arguments, names_to = "domain")

domains_use_domains_speak_2 <- domains_use_speak_2 |> 
  filter(!str_detect(domain, "tot")) |> 
  mutate(value = as.logical(value))

domains_use_tot_speak_2 <- domains_use_speak_2 |> 
  filter(str_detect(domain, "tot"))
```

### With whom

```{r}
#| label: domains-with
domains_use_domains |> 
  filter(str_detect(domain, "^with")) |> 
  ggplot(aes(domain, fill = value)) +
  geom_bar(position = "fill") +
  coord_flip()

domains_use_domains |> 
  filter(str_detect(domain, "^with")) |> 
  ggplot(aes(domain, fill = value)) +
  geom_bar(position = "fill") +
  coord_flip() +
  facet_wrap(~generation)

domains_use_domains |> 
  filter(str_detect(domain, "^with")) |> 
  ggplot(aes(domain, fill = value)) +
  geom_bar(position = "fill") +
  coord_flip() +
  facet_wrap(~Region)
```

```{r}
#| label: domains-with-speak-2
domains_use_domains_speak_2 |> 
  filter(str_detect(domain, "^with")) |> 
  ggplot(aes(generation, fill = value)) +
  geom_bar(position = "fill") +
  coord_flip() +
  facet_wrap(~domain)
```

### Where

```{r}
#| label: domains-at
domains_use_domains |> 
  filter(str_detect(domain, "^at")) |> 
  ggplot(aes(domain, fill = value)) +
  geom_bar(position = "fill") +
  coord_flip()

domains_use_domains |> 
  filter(str_detect(domain, "^at")) |> 
  ggplot(aes(domain, fill = value)) +
  geom_bar(position = "fill") +
  coord_flip() +
  facet_wrap(~generation)

domains_use_domains |> 
  filter(str_detect(domain, "^at")) |> 
  ggplot(aes(domain, fill = value)) +
  geom_bar(position = "fill") +
  coord_flip() +
  facet_wrap(~Region)
```

```{r}
#| label: domains-at-speak-2
domains_use_domains_speak_2 |> 
  filter(str_detect(domain, "^at")) |> 
  ggplot(aes(generation, fill = value)) +
  geom_bar(position = "fill") +
  coord_flip() +
  facet_wrap(~domain)
```

### About what

```{r}
#| label: domains-about
domains_use_domains |> 
  filter(str_detect(domain, "^about")) |> 
  ggplot(aes(domain, fill = value)) +
  geom_bar(position = "fill") +
  coord_flip()

domains_use_domains |> 
  filter(str_detect(domain, "^about")) |> 
  ggplot(aes(domain, fill = value)) +
  geom_bar(position = "fill") +
  coord_flip() +
  facet_wrap(~generation)

domains_use_domains |> 
  filter(str_detect(domain, "^about")) |> 
  ggplot(aes(domain, fill = value)) +
  geom_bar(position = "fill") +
  coord_flip() +
  facet_wrap(~Region)
```

```{r}
#| label: domains-about-gen

domains_use_domains |> 
  filter(str_detect(domain, "^about")) |> 
  mutate(
    domain = case_when(
      domain == "about_anger" ~ "Anger",
      domain == "about_arguments" ~ "Disagreements",
      domain == "about_counting" ~ "Counting",
      domain == "about_directions" ~ "Giving directions",
      domain == "about_distantpast" ~ "Distant past",
      domain == "about_foreignnews" ~ "Foreign news",
      domain == "about_givinginstr" ~ "Giving instructions",
      domain == "about_greetings" ~ "Greetings",
      domain == "about_happiness" ~ "Happiness",
      domain == "about_intimate" ~ "Intimacy",
      domain == "about_joking" ~ "Joking",
      domain == "about_news" ~ "News",
      domain == "about_politics" ~ "Politics",
      domain == "about_praying" ~ "Praying",
      domain == "about_science" ~ "Science",
      domain == "about_storytell" ~ "Story telling",
      domain == "about_swearing" ~ "Swearing",
      domain == "about_thinking" ~ "Thinking",
      domain == "about_wishes" ~ "Wishes"
    )
  ) |> 
  ggplot(aes(generation, fill = value)) +
  geom_bar(position = "fill") +
  facet_wrap(~domain) +
  scale_x_discrete(labels = c("S", "B", "X", "M", "Z")) +
  scale_fill_brewer(type = "qual", direction = -1) +
  labs(
    x = "Cohort generation", y = "Proportion"
  )
```

```{r}
#| label: domains-about-gen-speak-2

domains_use_domains_speak_2 |> 
  filter(str_detect(domain, "^about")) |>
  mutate(
    domain = case_when(
      domain == "about_anger" ~ "Anger",
      domain == "about_arguments" ~ "Disagreements",
      domain == "about_counting" ~ "Counting",
      domain == "about_directions" ~ "Giving directions",
      domain == "about_distantpast" ~ "Distant past",
      domain == "about_foreignnews" ~ "Foreign news",
      domain == "about_givinginstr" ~ "Giving instructions",
      domain == "about_greetings" ~ "Greetings",
      domain == "about_happiness" ~ "Happiness",
      domain == "about_intimate" ~ "Intimacy",
      domain == "about_joking" ~ "Joking",
      domain == "about_news" ~ "News",
      domain == "about_politics" ~ "Politics",
      domain == "about_praying" ~ "Praying",
      domain == "about_science" ~ "Science",
      domain == "about_storytell" ~ "Story telling",
      domain == "about_swearing" ~ "Swearing",
      domain == "about_thinking" ~ "Thinking",
      domain == "about_wishes" ~ "Wishes"
    )
  ) |> 
  ggplot(aes(generation, fill = value)) +
  geom_bar(position = "fill") +
  facet_wrap(~domain) +
  scale_x_discrete(labels = c("S", "B", "X", "M", "Z")) +
  scale_fill_brewer(type = "qual", direction = -1) +
  labs(
    x = "Cohort generation", y = "Proportion"
  )
```

