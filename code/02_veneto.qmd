---
title: "Veneto"
format: html
---

## Attach packages

```{r}
#| label: data
#| message: false

source("code/scripts/packages.R")
polentometro <- readRDS("data/derived/polentometro.rds")
```

## Prep Veneto data

```{r}
#| label: veneto

veneto <- polentometro %>%
  filter(`Denominazione Regione` == "Veneto")

comuni_veneto_path <- "data/derived/comuni-veneto.csv"

if (file.exists(comuni_veneto_path)) {
  veneto_comuni <- read_csv(comuni_veneto_path)
} else {
  veneto_comuni <- veneto %>%
    distinct(`Denominazione in italiano`) %>%
    geocode(city = `Denominazione in italiano`, method = "osm", verbose = TRUE)
  write_csv(veneto_comuni, comuni_veneto_path)
}

veneto <- left_join(veneto, veneto_comuni)

saveRDS(veneto, "data/derived/veneto.rds")
```

## Plot map

```{r}
#| label: italy-sf

italy <- ne_countries(continent = "Europe", scale = "large", returnclass = "sf")

italy_adm1 <- st_read("data/italy-adm1/bb489fv3314.shp")
italy_adm2 <- st_read("data/italy-adm2/mn871sp9778.shp")
```

```{r}
#| label: veneto-count

veneto_count <- veneto %>%
  count(`Denominazione in italiano`, long, lat)

ggplot() +
  geom_sf(data = italy) +
  geom_sf(data = italy_adm2 %>% filter(name_1 == "Veneto"), aes(fill = name_2), alpha = 0.5) +
  coord_sf(c(10.5, 13.2), c(44.7, 46.7)) +
  geom_point(data = veneto_count, aes(long, lat, size = n), alpha = 0.5)
```

## Attitude plots

```{r}
#| label: veneto-lik

veneto_lik <- veneto %>%
  dplyr::select(LA02_01:LA02_08) %>%
  mutate(across(everything(), as.numeric)) %>%
  pivot_longer(everything(), names_to = "quality", values_to = "score") %>%
  count(quality, score) %>%
  pivot_wider(names_from = "score", values_from = n) %>%
  mutate(`1` = ifelse(is.na(`1`), 0, `1`)) %>%
  dplyr::select(-`NA`, -`-9`) %>%
  mutate(
    quality = c("istruita", "raffinata", "amichevole", "gentile", "alla moda", "divertente", "ricca", "cittadina")
  )

png("./img/likert.png", width = 7, height = 5, units = "in", res = 600)
likert(
  quality ~ . ,
  veneto_lik,
  as.percent = TRUE,
  main = ""
)
dev.off()

veneto_lik_gen <- veneto %>%
  dplyr::select(LA02_01:LA02_08, generation) %>%
  mutate(across(LA02_01:LA02_08, as.numeric)) %>%
  pivot_longer(LA02_01:LA02_08, names_to = "quality", values_to = "score") %>%
  drop_na() %>%
  count(quality, generation, score) %>%
  pivot_wider(names_from = "score", values_from = n) %>%
  dplyr::select(generation, quality, `1`, `2`, `3`, `4`, `5`, `6`, `7`) %>%
  mutate(across(`1`:`7`, ~ifelse(is.na(.x), 0, .x))) %>%
  arrange(generation) %>%
  mutate(
    quality = rep(c("istruita", "raffinata", "amichevole", "gentile", "alla moda", "divertente", "ricca", "cittadina"), 4)
  )

png("./img/likert-gen.png", width = 7, height = 5, units = "in", res = 600)
likert(
  quality ~ . | generation ,
  veneto_lik_gen,
  as.percent = TRUE,
  main = ""
)
dev.off()

png("./img/likert-gen-2.png", width = 7, height = 4, units = "in", res = 600)
likert(
  generation ~ . | quality ,
  veneto_lik_gen,
  as.percent = TRUE,
  main = ""
)
dev.off()
```

## Competence, attitudes and spaces

```{r}
#### Attitudes data for MCA ####
veneto_attitudes <- veneto %>%
  dplyr::select(LA02_01:LA02_08) %>%
  dplyr::filter(!(if_any(everything(), ~ . %in% c(-9)))) %>%
  drop_na() %>%
  # Make sure cols are odered factors! If numeric, MCA does not work
  mutate(across(everything(), as.ordered)) %>%
  rename(c("istruita" = 1, "raffinata" = 2, "amichevole" = 3, "gentile" = 4, "allamoda" = 5, "divertente" = 6, "ricca" = 7, "cittadina" = 8))

veneto_attitudes_27 <- veneto %>%
  dplyr::select(LA02_01:LA02_08) %>%
  dplyr::filter(!(if_any(everything(), ~ . %in% c(-9, 1)))) %>%
  drop_na() %>%
  # Make sure cols are odered factors! If numeric, MCA does not work
  mutate(across(everything(), as.ordered)) %>%
  rename(c("istruita" = 1, "raffinata" = 2, "amichevole" = 3, "gentile" = 4, "allamoda" = 5, "divertente" = 6, "ricca" = 7, "cittadina" = 8))
```

# Multiple Correspondence Analysis

This section runs the Multiple Correspondence Analysis.
The aim is to reduce the 8 qualities to a couple dimensions to simplify subsequent analyses.

```{r}
veneto_attitudes_mca <- MCA(veneto_attitudes, graph = FALSE)
fviz_mca_var(veneto_attitudes_mca, col.var = "black", shape.var = 15, repel = TRUE)
```


```{r attitudes-mca}
veneto_attitudes_mca <- MCA(veneto_attitudes_27, graph = FALSE)
veneto_attitudes_dims <- veneto_attitudes_mca[["ind"]][["coord"]]
```

```{r screeplot}
fviz_screeplot(veneto_attitudes_mca, addlabels = TRUE, ylim = c(0, 15))
fviz_mca_biplot(veneto_attitudes_mca, repel = TRUE)
fviz_mca_var(veneto_attitudes_mca, choice = "mca.cor", repel = TRUE)
fviz_mca_var(veneto_attitudes_mca, col.var = "black", shape.var = 15, repel = TRUE)
fviz_mca_var(veneto_attitudes_mca, col.var = "black", shape.var = 15, repel = TRUE, axes = c(2, 3))
fviz_mca_var(veneto_attitudes_mca, col.var = "black", shape.var = 15, repel = TRUE, axes = c(4, 5))
```

```{r mca-dim1}
veneto_mca_dim1 <- veneto_attitudes_mca$var$coord %>%
  as_tibble(rownames = "var") %>%
  separate(var, into = c("attitude", "score"))

# Note that we are inverting Dim1 so that greater means more positive attitude.

veneto_mca_dim1_mean <- mean(veneto_mca_dim1$`Dim 1`[veneto_mca_dim1$score == 4])

veneto_mca_dim1 %>%
  ggplot(aes(`Dim 1`, attitude, colour = score, size = score)) +
  geom_vline(xintercept = veneto_mca_dim1_mean, linetype = "dashed") +
  geom_point() +
  # scale_color_manual(values = c("#a6611a", "#dfc27d", "darkgrey", "#80cdc1", "#018571")) +
  scale_color_brewer(type = "div") +
  labs(
    x = "Dimension 1 score",
    y = "Qualities",
    colour = "Likert score",
    size = "Likert score"
  )

ggsave("img/dim1.png", width = 7, height = 5)
```

