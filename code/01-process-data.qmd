---
title: "01 - Process data"
author: "Stefano Coretta"
format: html
---

```{r}
#| label: packages
#| message: false

source("code/scripts/packages.R")
library(readxl)
```

## Get comuni

```{r}
#| label: comuni
comuni_it <- read_excel("data/raw/Elenco-comuni-italiani.xls", guess_max = 5000)

comuni_it_include <- comuni_it %>%
  filter(
    `Denominazione Regione` %in% c("Piemonte", "Valle d'Aosta/Vallée d'Aoste", "Lombardia", "Trentino-Alto Adige/Südtirol", "Veneto", "Friuli-Venezia Giulia", "Liguria", "Emilia-Romagna")
  ) %>%
  select(Comune = `Denominazione in italiano`, Area = `Ripartizione geografica`, Region = `Denominazione Regione`, Province = `Denominazione provincia`)

comuni_ch <- read_excel("data/raw/Elenco-comuni-svizzeri.xlsx")

comuni_ch_include <- comuni_ch |> 
  filter(Cantone %in% c("TI", "GR")) |> 
  mutate(Cantone = ifelse(Cantone == "TI", "Ticino", "Grigioni")) |> 
  select(Comune = `Nome del Comune`, Region = Cantone, Province = `Nome del Distretto`) |> 
  mutate(Area = "Svizzera")

comuni <- bind_rows(comuni_it_include, comuni_ch_include)
```

```{r}
#| label: comuni-codes

comuni_list <- sort(c(comuni$Comune, "Città di San Marino"))

write_lines(comuni_list, "data/raw/comuni.txt")

# Make sure the file ends in a new line or read_fwf() says it's not a file
comuni_codes <- read_fwf("data/raw/comuni-codes.txt", col_types = "nc")
colnames(comuni_codes) <- c("LO02", "Comune")
```

### Geocode all comuni

```{r}
#| label: comuni-geo

comuni_all_tbl <- read_csv("data/raw/comuni.txt", col_names = "city")

comuni_geo_path <- "data/derived/comuni.csv"

if (file.exists(comuni_geo_path)) {
  comuni_geo <- read_csv(comuni_geo_path)
} else {
  comuni_geo <- comuni_all_tbl %>%
    geocode(city = city, method = "osm", verbose = TRUE)
  write_csv(comuni_geo, comuni_geo_path)
}
```

```{r}
#| label: comuni_full

comuni_full <- comuni |> 
  left_join(comuni_codes) |> 
  left_join(comuni_geo, by = c("Comune" = "city"))
```

## Read data

### GI questionnaire

We can read the data from SosciSurvey using the SosciSurvey API, which has been enabled for this project. No credentials are necessary.

```{r}
#| label: read-data

eval(parse("https://www.soscisurvey.de/galloitalico/?act=CWa8cZWJTeDgnkrqoOUwLKfL&vQuality&rScript", encoding="UTF-8"))

gi_vital <- ds %>%
  mutate(
    LO02 = as.numeric(LO02),
    LO02 = ifelse(is.na(LO02), LO07, LO02)
  ) %>%
  left_join(y = comuni_full)

write_csv(gi_vital, "data/raw/gi_vital.csv")
```

### Polentometro

```{r}
#| label: read-polentometro

source("code/scripts/import_polentometro.R")

polentometro <- ds %>%
  mutate(
    LO02 = as.numeric(LO02),
    LO02 = ifelse(is.na(LO02), LO07, LO02),
    LO02 = case_when(
      LO02s == "Sannazzar" ~ 3678,
      LO02s == "Merano BZ" ~ 2374,
      TRUE ~ LO02
    )
  ) %>%
  left_join(y = comuni_full) %>%
  mutate(
    birth_year = year(as_date(STARTED)) - DE01_01,
    generation = case_when(
      birth_year >= 2013 ~ "Alpha",
      birth_year >= 1997 ~ "Z",
      birth_year >= 1981 ~ "Millennials",
      birth_year >= 1965 ~ "X",
      birth_year >= 1946 ~ "Boomers",
      birth_year >= 1928 ~ "Silent"
    ),
    generation = factor(generation, levels = c("Silent", "Boomers", "X", "Millennials", "Z", "Alpha")),
    # Need this because the script adds classes to some columns and when they have different classes they can't be combined
    across(c(LU01, LU02, LU03, RW01:RW03, RW04), as.numeric),
    # RW01 and 2 have 1 = yes and 2 = no
    RW01 = abs(RW01 - 2),
    RW02 = abs(RW02 - 2)
  ) %>%
  rowwise() %>%
  mutate(
    spaces_n = sum(c_across(c(LU01, LU02, LU03, RW01:RW02, RW04)), na.rm = TRUE),
  ) %>%
  ungroup() %>%
  mutate(
    spaces_prop = spaces_n / (15 + 10 + 20 + 6),
    # hard code Val Mara
    lat = ifelse(Comune == "Val Mara", 45.9274, lat),
    long = ifelse(Comune == "Val Mara", 8.9867, long),
    # hard code Rossa Piemonte
    lat = ifelse(Comune == "Rossa (Piemonte)", 45.8333, lat),
    long = ifelse(Comune == "Rossa (Piemonte)", 8.1262, long)
  )

saveRDS(polentometro, "data/derived/polentometro.rds")

table(polentometro$generation)
```

### Multiple correspondence analysis (MCA)

```{r}
#| label: polentometro-attitudes

#### Attitudes data for MCA ####
polentometro_attitudes <- polentometro %>%
  select(LA02_01:LA02_08) %>%
  drop_na() %>%
  # Make sure cols are odered factors! If numeric, MCA does not work
  mutate(across(everything(), as.ordered)) %>%
  rename(c("istruita" = 1, "raffinata" = 2, "amichevole" = 3, "gentile" = 4, "allamoda" = 5, "divertente" = 6, "ricca" = 7, "cittadina" = 8))

polentometro_attitudes_cases <- polentometro %>%
  select(CASE, LA02_01:LA02_08) %>%
  drop_na(LA02_01:LA02_08) %>%
  pull(CASE)

polentometro_attitudes_27 <- polentometro %>%
  select(LA02_01:LA02_08) %>%
  filter(!(if_any(everything(), ~ . %in% c(1)))) %>%
  drop_na() %>%
  # Make sure cols are odered factors! If numeric, MCA does not work
  mutate(across(everything(), as.ordered)) %>%
  rename(c("istruita" = 1, "raffinata" = 2, "amichevole" = 3, "gentile" = 4, "allamoda" = 5, "divertente" = 6, "ricca" = 7, "cittadina" = 8))

polentometro_attitudes_cases_27 <- polentometro %>%
  select(CASE, LA02_01:LA02_08) %>%
    filter(!(if_any(LA02_01:LA02_08, ~ . %in% c(1)))) %>%
  drop_na(LA02_01:LA02_08) %>%
  pull(CASE)
```

```{r}
#| label: attitudes-mca

attitudes_mca <- MCA(polentometro_attitudes, graph = FALSE)
attitudes_dims <- attitudes_mca[["ind"]][["coord"]]
fviz_mca_var(attitudes_mca, col.var = "black", shape.var = 15, repel = TRUE)

attitudes_mca_27 <- MCA(polentometro_attitudes_27, graph = FALSE)
attitudes_dims_27 <- attitudes_mca_27[["ind"]][["coord"]]
fviz_mca_var(attitudes_mca_27, col.var = "black", shape.var = 15, repel = TRUE)
```

```{r}
#| label: polentometro-dim

polentometro_dim <- polentometro %>%
  left_join(y = bind_cols(CASE = polentometro_attitudes_cases, dim_1 = attitudes_dims[, 1], dim_2 = attitudes_dims[, 3])) %>%
  left_join(y = bind_cols(CASE = polentometro_attitudes_cases_27, dim_1_27 = attitudes_dims_27[, 1], dim_2_27 = attitudes_dims_27[, 3]))

saveRDS(polentometro_dim, "data/derived/polentometro_dim.rds")
```

## Geo

```{r}
#| label: geo-counts

geo_counts <- polentometro %>%
  filter(MAXPAGE > 7) %>%
  group_by(`Denominazione Regione`, `Denominazione provincia`) %>%
  count() %>%
  arrange(n)

geo_counts_region <- polentometro %>%
  filter(MAXPAGE > 7) %>%
  group_by(`Denominazione Regione`) %>%
  count() %>%
  arrange(n)
```

```{r}
#| label: italy-gis
#| message: false

italy <- ne_countries(continent = "Europe", scale = "large", returnclass = "sf")

italy_adm1 <- st_read("data/italy-adm1/bb489fv3314.shp")
italy_adm2 <- st_read("data/italy-adm2/mn871sp9778.shp")

polentometro_pro_count <- polentometro %>%
  count(`Denominazione provincia`)

italy_adm2 <- left_join(italy_adm2, polentometro_pro_count, by = c("name_2" = "Denominazione provincia"))
```

```{r}
#| label: comuni-counts
#| warning: false

polentometro_count <- polentometro %>%
  count(`Denominazione in italiano`, long, lat)

regions <- c("Valle d'Aosta", "Piemonte", "Liguria", "Lombardia", "Emilia-Romagna", "Veneto", "Friuli-Venezia Giulia", "Trentino-Alto Adige", "San Marino")

ggplot() +
  geom_sf(data = italy) +
  geom_sf(data = italy_adm1 %>% filter(name_1 %in% regions), aes(fill = name_1), alpha = 0.3) +
  geom_sf(data = italy_adm2 %>% filter(name_1 %in% regions), fill = NA) +
  coord_sf(c(6.5, 14), c(43.5, 47)) +
  geom_point(data = polentometro_count, aes(long, lat, size = n), alpha = 0.5) +
  labs(x = element_blank(), y = element_blank()) +
  theme_light() +
  theme(legend.position = "none")

ggsave("img/comuni-counts.png", width = 7, height = 5)
```

```{r}
#| label: provincie-counts

ggplot() +
  geom_sf(data = italy) +
  geom_sf(data = italy_adm2 %>% filter(name_1 %in% regions), aes(fill = n)) +
  geom_sf(data = italy_adm1 %>% filter(name_1 %in% regions), fill = NA, colour = "red") +
  scale_fill_distiller(palette = "BuGn", direction = 1, limits = c(0, max(polentometro_pro_count$n, na.rm = TRUE))) +
  coord_sf(c(6.5, 14), c(43.5, 47)) +
  labs(x = element_blank(), y = element_blank()) +
  theme_light()

ggsave("img/provincie-counts.png", width = 7, height = 5)

```

## Polentone attitude

```{r}
polentometro |> 
  drop_na(PL01) |> 
  ggplot(aes(PL01, fill = PL01)) +
  geom_bar() +
  scale_fill_brewer(type = "div") +
  theme_dark()

ggsave("img/likert-polentone.png", width = 7, height = 5)

polentone_lik <- polentometro %>%
  dplyr::select(PL01, generation) %>%
  mutate(PL01 = as.numeric(PL01)) %>%
  count(PL01, generation) %>%
  pivot_wider(names_from = PL01, values_from = n) %>%
  mutate(across(`1`:`5`, ~ifelse(is.na(.x), 0, .x))) %>%
  dplyr::select(-`NA`) |> 
  drop_na(generation)

png("./img/likert-polentone-gen.png", width = 7, height = 5, units = "in", res = 600)
likert(
  generation ~ . ,
  polentone_lik,
  as.percent = TRUE,
  main = ""
)
dev.off()
```
