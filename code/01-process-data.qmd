---
title: "01 - Process data"
author: "Stefano Coretta"
format: html
---

```{r}
#| label: packages
#| message: false

source("code/scripts/packages.R")

```

## Get comuni

```{r comuni}
library(readxl)
comuni <- read_excel("data/raw/Elenco-comuni-italiani.xls", guess_max = 5000)

comuni_include <- comuni %>%
  filter(
    `Denominazione Regione` %in% c("Piemonte", "Valle d'Aosta/Vallée d'Aoste", "Lombardia", "Trentino-Alto Adige/Südtirol", "Veneto", "Friuli-Venezia Giulia", "Liguria", "Emilia-Romagna")
  )

comuni_svizzera <- read_lines("data/raw/comuni-svizzera.txt")

comuni_all <- sort(c(comuni_include$`Denominazione in italiano`, comuni_svizzera))

write_lines(comuni_all, "data/raw/comuni.txt")

comuni_codes <- read_fwf("data/raw/comuni-codes.txt", col_types = "nc")
colnames(comuni_codes) <- c("LO02", "Denominazione in italiano")
```

## Read data

### GI questionnaire

We can read the data from SosciSurvey using the SosciSurvey API, which has been enabled for this project. No credentials are necessary.

```{r}
#| label: read-data

eval(parse("https://www.soscisurvey.de/galloitalico/?act=CWa8cZWJTeDgnkrqoOUwLKfL&vQuality&rScript", encoding="UTF-8"))

gi_vital <- ds %>%
  mutate(
    LO02 = as.numeric(LO02),
    LO02 = ifelse(is.na(LO02), LO07, LO02)
  ) %>%
  left_join(y = comuni_codes) %>%
  left_join(y = comuni_include)

write_csv(gi_vital, "data/raw/gi_vital.csv")
```

### Polentometro

```{r}
#| label: read-polentometro

eval(parse("https://www.soscisurvey.de/polentometro/?act=PeporZZ30N9exMBH054dTnXc&vQuality&rScript", encoding="UTF-8"))

polentometro <- ds %>%
  mutate(
    LO02 = as.numeric(LO02),
    LO02 = ifelse(is.na(LO02), LO07, LO02)
  ) %>%
  left_join(y = comuni_codes) %>%
  left_join(y = comuni_include) %>%
  mutate(
    birth_year = year(as_date(STARTED)) - DE01_01,
    generation = case_when(
      birth_year >= 2013 ~ "Alpha",
      birth_year >= 1997 ~ "Z",
      birth_year >= 1981 ~ "Millennials",
      birth_year >= 1965 ~ "X",
      birth_year >= 1946 ~ "Boomers",
      birth_year >= 1928 ~ "Silent"
    ),
    generation = factor(generation, levels = c("Silent", "Boomers", "X", "Millennials", "Z", "Alpha"))
  )

table(polentometro$generation)
```

```{r}
#| label: geo

comuni_geo_path <- "data/derived/comuni.csv"

if (file.exists(comuni_geo_path)) {
  comuni_geo <- read_csv(comuni_geo_path)
} else {
  comuni_geo <- polentometro %>%
    distinct(`Denominazione in italiano`) %>%
    arrange(`Denominazione in italiano`) %>%
    geocode(city = `Denominazione in italiano`, method = "osm", verbose = TRUE)
  write_csv(comuni_geo, comuni_geo_path)
}

polentometro <- left_join(polentometro, comuni_geo)

saveRDS(polentometro, "data/derived/polentometro.rds")
```

```{r}
#| label: geo-counts

geo_counts <- polentometro %>%
  filter(MAXPAGE > 7) %>%
  group_by(`Denominazione Regione`, `Denominazione provincia`) %>%
  count() %>%
  arrange(n)

geo_counts_region <- polentometro %>%
  filter(MAXPAGE > 7) %>%
  group_by(`Denominazione Regione`) %>%
  count() %>%
  arrange(n)
```

```{r}
#| label: italy-gis
#| message: false

italy <- ne_countries(continent = "Europe", scale = "large", returnclass = "sf")

italy_adm1 <- st_read("data/italy-adm1/bb489fv3314.shp")
italy_adm2 <- st_read("data/italy-adm2/mn871sp9778.shp")
```

```{r}
#| label: comuni-counts
#| warning: false

polentometro_count <- polentometro %>%
  count(`Denominazione in italiano`, long, lat)

regions <- c("Valle d'Aosta", "Piemonte", "Liguria", "Lombardia", "Emilia-Romagna", "Veneto", "Friuli-Venezia Giulia", "Trentino-Alto Adige", "San Marino")

ggplot() +
  geom_sf(data = italy) +
  geom_sf(data = italy_adm1 %>% filter(name_1 %in% regions), aes(fill = name_1), alpha = 0.3) +
  geom_sf(data = italy_adm2 %>% filter(name_1 %in% regions), fill = NA) +
  coord_sf(c(6.5, 14), c(43.5, 47)) +
  geom_point(data = polentometro_count, aes(long, lat, size = n), alpha = 0.5) +
  labs(x = element_blank(), y = element_blank()) +
  theme_light() +
  theme(legend.position = "none")

ggsave("img/comuni-counts.png", width = 7, height = 5)
```
