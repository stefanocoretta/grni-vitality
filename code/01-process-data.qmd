---
title: "01 - Process data"
author: "Stefano Coretta"
format: html
---

```{r}
#| label: packages
#| message: false

source("code/scripts/packages.R")

```

## Get comuni

```{r comuni}
library(readxl)
comuni <- read_excel("data/Elenco-comuni-italiani.xls")

comuni_include <- comuni %>%
  filter(
    `Denominazione Regione` %in% c("Piemonte", "Valle d'Aosta/Vallée d'Aoste", "Lombardia", "Trentino-Alto Adige/Südtirol", "Veneto", "Friuli-Venezia Giulia", "Liguria", "Emilia-Romagna")
  )

comuni_svizzera <- read_lines("data/comuni-svizzera.txt")

comuni_all <- sort(c(comuni_include$`Denominazione in italiano`, comuni_svizzera))

write_lines(comuni_all, "data/comuni.txt")

comuni_codes <- read_fwf("data/comuni-codes.txt")
colnames(comuni_codes) <- c("LO02", "Denominazione in italiano")
```

## Read data

We can read the data from SosciSurvey using the SosciSurvey API, which has been enabled for this project. No credentials are necessary.

```{r}
#| label: read-data
#| message: false

source("code/scripts/import_galloitalico_2023-01-28_11-52.R")
write_csv(gi_vital, "data/gi_vital.csv")
```

```{r}
#| label: cases

range(gi_vital$CASE)
length(unique(gi_vital$CASE))

```

```{r}
#| label: read-polentometro

eval(parse("https://www.soscisurvey.de/polentometro/?act=PeporZZ30N9exMBH054dTnXc&vQuality&rScript", encoding="UTF-8"))

polentometro <- ds %>%
  mutate(LO02 = as.character(LO02)) %>%
  left_join(y = comuni_codes) %>%
  left_join(y = comuni_include)
```

```{r}
geo_counts <- polentometro %>%
  group_by(`Denominazione Regione`, `Denominazione provincia`) %>%
  count() %>%
  arrange(n)
```
