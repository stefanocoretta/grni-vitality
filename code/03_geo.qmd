---
title: "Geographical analysis"
author: "Stefano Coretta"
---

```{r}
#| label: packages
#| message: false

source("code/scripts/packages.R")
```

## Read data

```{r}
#| label: polentometro
polentometro_en_include <- readRDS("data/derived/polentometro_en_include.rds")
```

```{r}
#| label: geo-counts

geo_counts_comune <- polentometro_en_include |> 
  count(Comune, lat, long, sort = TRUE)

geo_counts_province <- polentometro_en_include |>
  count(Region, Province, sort = TRUE)

geo_counts_region <- polentometro_en_include |>
  count(Region, sort = TRUE)

speak_counts_province <- polentometro_en_include |>
  count(is_speaker, Region, Province) |> 
  pivot_wider(names_from = is_speaker, values_from = n, values_fill = 0) |> 
  mutate(
    tot = `TRUE` + `FALSE`,
    prop = `TRUE` / tot
  ) |> 
  arrange(-tot)

speak_counts_comune <- polentometro_en_include |> 
  count(is_speaker, Region, Province, Comune) |> 
  pivot_wider(names_from = is_speaker, values_from = n, values_fill = 0) |> 
  mutate(
    tot = `TRUE` + `FALSE`,
    prop = `TRUE` / tot
  ) |> 
  arrange(-tot)
```

## Geo data

```{r}
#| label: gis
#| message: false

regions <- c("Valle d'Aosta", "Piemonte", "Liguria", "Lombardia", "Emilia-Romagna", "Veneto", "Friuli-Venezia Giulia", "Trentino-Alto Adige", "San Marino", "Graubünden", "Ticino")

it <- st_read("data/gis/ITA_adm/ITA_adm0.shp")
aut <- st_read("data/gis/AUT_adm/AUT_adm0.shp")
che <- st_read("data/gis/CHE_adm/CHE_adm0.shp")
fra <- st_read("data/gis/FRA_adm/FRA_adm0.shp")
hrv <- st_read("data/gis/HRV_adm/HRV_adm0.shp")
lie <- st_read("data/gis/LIE_adm/LIE_adm0.shp")
smr <- st_read("data/gis/SMR_adm/SMR_adm0.shp")
svn <- st_read("data/gis/SVN_adm/SVN_adm0.shp")

adm0 <- bind_rows(it, aut, che, fra, lie, hrv, smr, svn)

it_adm1 <- st_read("data/gis/ITA_adm/ITA_adm1.shp") |> 
  filter(NAME_1 %in% regions)
it_adm2 <- st_read("data/gis/ITA_adm/ITA_adm2.shp") |> 
  filter(NAME_1 %in% regions) |> 
  mutate(
    NAME_2 = case_when(
      NAME_2 == "Padua" ~ "Padova",
      NAME_2 == "Forli' - Cesena" ~ "Forlì-Cesena",
      NAME_2 == "Reggio Nell'Emilia" ~ "Reggio nell'Emilia",
      NAME_2 == "Aosta" ~ "Valle d'Aosta/Vallée d'Aoste",
      NAME_2 == "Monza and Brianza" ~ "Monza e della Brianza",
      NAME_2 == "Mantua" ~ "Mantova",
      NAME_2 == "Bolzano" ~ "Bolzano/Bozen",
      TRUE ~ NAME_2
    )
  )
it_adm3 <- st_read("data/gis/ITA_adm/ITA_adm3.shp") |> 
  filter(NAME_1 %in% regions) |> 
  mutate(
    NAME_2 = case_when(
      NAME_2 == "Padua" ~ "Padova",
      NAME_2 == "Forli' - Cesena" ~ "Forlì-Cesena",
      NAME_2 == "Reggio Nell'Emilia" ~ "Reggio nell'Emilia",
      NAME_2 == "Aosta" ~ "Valle d'Aosta/Vallée d'Aoste",
      NAME_2 == "Monza and Brianza" ~ "Monza e della Brianza",
      NAME_2 == "Mantua" ~ "Mantova",
      NAME_2 == "Bolzano" ~ "Bolzano/Bozen",
      TRUE ~ NAME_2
    ),
    NAME_3 = str_replace_all(NAME_3, "d' ", "d'"),
    NAME_3 = str_replace_all(NAME_3, "dell' ", "dell'"),
    NAME_3 = str_replace_all(NAME_3, "Sant' ", "Sant'"),
    NAME_3 = str_replace_all(NAME_3, "Castell' ", "Castell'"),
    NAME_3 = str_replace_all(NAME_3, "sull' ", "sull'"),
    NAME_3 = str_replace_all(NAME_3, "Di", "di"),
    NAME_3 = str_replace_all(NAME_3, "Per", "per"),
    NAME_3 = str_replace_all(NAME_3, "Del", "del"),
    NAME_3 = str_replace_all(NAME_3, "Dei", "dei"),
    NAME_3 = str_replace_all(NAME_3, "In", "in"),
    NAME_3 = str_replace_all(NAME_3, "Sul", "sul")
    
  )

ch_adm1 <- st_read("data/gis/CHE_adm/CHE_adm1.shp") |> 
  filter(NAME_1 %in% regions) |>
  mutate(
    NAME_1 = case_when(
      NAME_1 == "Graubünden" ~ "Grigioni",
      TRUE ~ NAME_1
    )
  )
ch_adm2 <- st_read("data/gis/CHE_adm/CHE_adm2.shp") |> 
  filter(NAME_1 %in% regions) |>
  mutate(
    NAME_1 = case_when(
      NAME_1 == "Graubünden" ~ "Grigioni",
      TRUE ~ NAME_1
    ),
    NAME_2 = case_when(
      NAME_2 == "Moësa" ~ "Moesa",
      TRUE ~ NAME_2
    )
  )
ch_adm3 <- st_read("data/gis/CHE_adm/CHE_adm3.shp") |> 
  filter(NAME_1 %in% regions) |>
  mutate(
    NAME_1 = case_when(
      NAME_1 == "Graubünden" ~ "Grigioni",
      TRUE ~ NAME_1
    ),
    NAME_2 = case_when(
      NAME_2 == "Moësa" ~ "Moesa",
      TRUE ~ NAME_2
    )
  )

adm1 <- bind_rows(it_adm1, ch_adm1)
adm2 <- bind_rows(it_adm2, ch_adm2)
adm3 <- bind_rows(it_adm3, ch_adm3)

responses_provinces <- left_join(adm2, geo_counts_province, by = c("NAME_2" = "Province"))
speakers_provinces <- left_join(adm2, speak_counts_province, by = c("NAME_2" = "Province"))
speakers_comuni <- left_join(adm3, speak_counts_comune, by = c("NAME_2" = "Province", "NAME_3" = "Comune"))
```


## Maps

### Number of responses

```{r}
#| label: comuni-counts
#| warning: false

ggplot() +
  geom_sf(data = adm0) +
  geom_sf(data = adm1, aes(fill = NAME_1), alpha = 0.3) +
  geom_sf(data = responses_provinces, fill = NA) +
  coord_sf(c(6.5, 14), c(43.5, 47)) +
  geom_point(data = geo_counts_comune, aes(long, lat, size = n), alpha = 0.5) +
  labs(x = element_blank(), y = element_blank()) +
  theme_light() +
  labs(
    title = "Number of respondents per comune",
    size = "Number"
  ) +
  guides(fill = "none")

ggsave("img/comuni-counts.png", width = 7, height = 5)
```

```{r}
#| label: provincie-counts

ggplot() +
  geom_sf(data = adm0) +
  geom_sf(data = responses_provinces, aes(fill = n)) +
  geom_sf(data = adm1, fill = NA, colour = "red") +
  scale_fill_distiller(palette = "YlGnBu", direction = 1, limits = c(0, max(geo_counts_province$n, na.rm = TRUE))) +
  coord_sf(c(6.5, 14), c(43.5, 47)) +
  labs(x = element_blank(), y = element_blank()) +
  theme_light() +
  labs(
    title = "Number of respondents per province",
    fill = "Number"
  )

ggsave("img/provincie-counts.png", width = 7, height = 5)
```

### Number of speakers

```{r}
#| label: speaker-hex
#| warning: false

ggplot(adm0) +
  geom_sf(fill = "#FBEAC8", colour = "#aa7733", size = 0.5) +
  stat_summary_hex(
    data = polentometro_en_include,
    aes(long, lat, z = as.numeric(is_speaker)),
    colour = "grey7",
    binwidth = 0.3
  ) +
  coord_sf(c(6.5, 14), c(43.5, 47)) +
  scale_fill_distiller(direction = 1)

ggsave("img/speaker-hex.png", width = 7, height = 5)
```


```{r}
#| label: speaker-province

ggplot() +
  geom_sf(data = adm0) +
  geom_sf(data = speakers_provinces, aes(fill = prop)) +
  geom_sf(data = adm1, fill = NA, colour = "red") +
  scale_fill_distiller(palette = "YlGnBu", direction = 1, limits = c(0, 1)) +
  coord_sf(c(6.5, 14), c(43.5, 47)) +
  labs(x = element_blank(), y = element_blank()) +
  theme_light()

ggsave("img/speaker-province.png", width = 7, height = 5)
```

```{r}
#| label: speaker-comuni

ggplot() +
  geom_sf(data = adm0) +
  geom_sf(data = speakers_comuni, aes(fill = prop)) +
  geom_sf(data = adm1, fill = NA, colour = "red") +
  scale_fill_distiller(palette = "YlGnBu", direction = 1, limits = c(0, 1)) +
  coord_sf(c(6.5, 14), c(43.5, 47)) +
  labs(x = element_blank(), y = element_blank()) +
  theme_light() +
  labs(
    "Proportion of speakers by comune"
  )

ggsave("img/speaker-comune.png", width = 7, height = 5)
```

